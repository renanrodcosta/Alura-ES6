{"version":3,"sources":["../../app-es6/services/HttpService.js"],"names":["HttpService","url","fetch","then","_handlerErrors","response","json","dado","headers","method","body","JSON","stringify","_handleErrors","res","ok","Error","responseText"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mCAAaA,W;;;;;;;wCAELC,G,EAAK;AAAA;;AACL,+BAAOC,MAAMD,GAAN,EACFE,IADE,CACG;AAAA,mCAAY,MAAKC,cAAL,CAAoBC,QAApB,CAAZ;AAAA,yBADH,EAEFF,IAFE,CAEG;AAAA,mCAAYE,SAASC,IAAT,EAAZ;AAAA,yBAFH,CAAP;AAGH;;;yCAEIL,G,EAAKM,I,EAAM;AAAA;;AAEZ,+BAAOL,MAAMD,GAAN,EAAW;AACdO,qCAAS,EAAE,gBAAgB,kBAAlB,EADK;AAEdC,oCAAQ,MAFM;AAGdC,kCAAMC,KAAKC,SAAL,CAAeL,IAAf;AAHQ,yBAAX,EAKNJ,IALM,CAKD;AAAA,mCAAO,OAAKU,aAAL,CAAmBC,GAAnB,CAAP;AAAA,yBALC,CAAP;AAMH;;;mDAEcT,Q,EAAS;AACpB,4BAAGA,SAASU,EAAZ,EAAgB,OAAOV,QAAP;;AAEhB,8BAAM,IAAIW,KAAJ,CAAUX,SAASY,YAAnB,CAAN;AACH","file":"HttpService.js","sourcesContent":["export class HttpService{\r\n\r\n    get(url) {\r\n        return fetch(url)\r\n            .then(response => this._handlerErrors(response))\r\n            .then(response => response.json())\r\n    }\r\n\r\n    post(url, dado) {\r\n\r\n        return fetch(url, {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            method: 'post',\r\n            body: JSON.stringify(dado)\r\n        })\r\n        .then(res => this._handleErrors(res))\r\n    }\r\n\r\n    _handlerErrors(response){\r\n        if(response.ok) return response\r\n\r\n        throw new Error(response.responseText)\r\n    }\r\n}"]}