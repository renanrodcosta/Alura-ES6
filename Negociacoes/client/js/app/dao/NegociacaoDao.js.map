{"version":3,"sources":["../../app-es6/dao/NegociacaoDao.js"],"names":["NegociacaoDao","connection","_connection","_store","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","onerror","console","log","e","target","error","cursor","openCursor","negociacoes","resultSet","event","result","registro","value","push","Negociacao","_data","_quantidade","_valor","continue","clear"],"mappings":";;;;;;IAAMA,a;AACF,2BAAYC,UAAZ,EAAuB;AAAA;;AACnB,aAAKC,WAAL,GAAmBD,UAAnB;AACA,aAAKE,MAAL,GAAc,aAAd;AACH;;;;iCAEQC,U,EAAW;AAAA;;AAChB,mBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,oBAAIC,UAAU,MAAKN,WAAL,CACLO,WADK,CACO,CAAC,MAAKN,MAAN,CADP,EACsB,WADtB,EAELO,WAFK,CAEO,MAAKP,MAFZ,EAGLQ,GAHK,CAGDP,UAHC,CAAd;;AAKAI,wBAAQI,SAAR,GAAoB,aAAK;AACrBN;AACH,iBAFD;;AAIAE,wBAAQK,OAAR,GAAkB,aAAK;AACnBC,4BAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,2BAAO,uCAAP;AACH,iBAHD;AAKH,aAhBM,CAAP;AAiBH;;;sCAEY;AAAA;;AACT,mBAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAIY,SAAS,OAAKjB,WAAL,CACRO,WADQ,CACI,CAAC,OAAKN,MAAN,CADJ,EACmB,UADnB,EAERO,WAFQ,CAEI,OAAKP,MAFT,EAGRiB,UAHQ,EAAb;;AAKA,oBAAIC,cAAc,EAAlB;;AAEAF,uBAAOP,SAAP,GAAmB,iBAAS;AACxB,wBAAIU,YAAYC,MAAMN,MAAN,CAAaO,MAA7B;;AAEA,wBAAIF,SAAJ,EAAe;AACX,4BAAIG,WAAWH,UAAUI,KAAzB;;AAEAL,oCAAYM,IAAZ,CAAiB,IAAIC,UAAJ,CAAeH,SAASI,KAAxB,EAA+BJ,SAASK,WAAxC,EAAqDL,SAASM,MAA9D,CAAjB;AACAT,kCAAUU,QAAV;AACH,qBALD,MAKO;AACH1B,gCAAQe,WAAR;AACH;AACJ,iBAXD;AAYAF,uBAAON,OAAP,GAAiB,iBAAS;AACtBC,4BAAQC,GAAR,CAAYQ,MAAMN,MAAN,CAAaC,KAAzB;AACAX,2BAAO,wCAAP;AACH,iBAHD;AAIH,aAxBM,CAAP;AAyBH;;;sCAEY;AAAA;;AACT,mBAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAIC,UAAU,OAAKN,WAAL,CACLO,WADK,CACO,CAAC,OAAKN,MAAN,CADP,EACsB,WADtB,EAELO,WAFK,CAEO,OAAKP,MAFZ,EAGL8B,KAHK,EAAd;;AAKAzB,wBAAQI,SAAR,GAAoB;AAAA,2BAAMN,QAAQ,gCAAR,CAAN;AAAA,iBAApB;;AAEAE,wBAAQK,OAAR,GAAkB,aAAK;AACnBC,4BAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,2BAAO,wCAAP;AACH,iBAHD;AAKH,aAbM,CAAP;AAcH","file":"NegociacaoDao.js","sourcesContent":["class NegociacaoDao {\r\n    constructor(connection){\r\n        this._connection = connection\r\n        this._store = 'negociacoes'\r\n    }\r\n\r\n    adiciona(negociacao){\r\n        return new Promise((resolve, reject) => {\r\n\r\n            let request = this._connection\r\n                    .transaction([this._store], 'readwrite')\r\n                    .objectStore(this._store)\r\n                    .add(negociacao)\r\n\r\n            request.onsuccess = e => {\r\n                resolve()\r\n            }\r\n\r\n            request.onerror = e => {\r\n                console.log(e.target.error)\r\n                reject('Não foi possível adicionar negociação')\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    listarTodos(){\r\n        return new Promise((resolve, reject) => {\r\n            let cursor = this._connection\r\n                .transaction([this._store], 'readonly')\r\n                .objectStore(this._store)\r\n                .openCursor()\r\n\r\n            let negociacoes = []\r\n\r\n            cursor.onsuccess = event => {\r\n                let resultSet = event.target.result\r\n                \r\n                if (resultSet) {\r\n                    let registro = resultSet.value\r\n\r\n                    negociacoes.push(new Negociacao(registro._data, registro._quantidade, registro._valor))\r\n                    resultSet.continue()\r\n                } else {\r\n                    resolve(negociacoes)\r\n                }\r\n            }\r\n            cursor.onerror = event => {\r\n                console.log(event.target.error)\r\n                reject('Não foi possível listar as negociações');\r\n            }\r\n        })\r\n    }\r\n\r\n    apagarTodos(){\r\n        return new Promise((resolve, reject) => {\r\n            let request = this._connection\r\n                    .transaction([this._store], 'readwrite')\r\n                    .objectStore(this._store)\r\n                    .clear()\r\n\r\n            request.onsuccess = () => resolve('Negociações apagas com sucesso')\r\n\r\n            request.onerror = e => {\r\n                console.log(e.target.error)\r\n                reject('Não foi possível apagar as negociações')\r\n            }\r\n\r\n        })\r\n    }\r\n}"]}